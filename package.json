{
  "name": "sfdx-metadata-patcher",
  "description": "A Salesforce DX Plugin to hotpatch metadata before deployments",
  "version": "0.9.1",
  "author": "Raffaele Fioratto",
  "bugs": "https://github.com/ImperiumMaximus/sfdx-metadata-patcher/issues",
  "dependencies": {
    "@oclif/core": "^2.11.8",
    "@salesforce/core": "^5.2.10",
    "@salesforce/kit": "^3.0.8",
    "@salesforce/sf-plugins-core": "^3.1.14",
    "@salesforce/source-deploy-retrieve": "^9.7.24",
    "@salesforce/ts-types": "^2.0.8",
    "@types/cli-progress": "^3.11.0",
    "@types/micromatch": "^4.0.1",
    "chromedriver": ">=118.0.0 <119.0.0",
    "cli-progress": "^3.11.2",
    "common-substrings": "^3.0.1",
    "csv": "^5.5.0",
    "exceljs": "^4.2.1",
    "fast-fuzzy": "^1.11.2",
    "json-query": "^2.2.2",
    "jszip": "^3.10.1",
    "line-reader": "^0.4.0",
    "micromatch": "^4.0.2",
    "pino": "^8.11.0",
    "pino-pretty": "^10.0.0",
    "prompts": "^2.4.1",
    "selenium-webdriver": "^4.14.0",
    "sqlstring": "^2.3.2",
    "tmp": "^0.2.1",
    "tslib": "^2"
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@salesforce/cli-plugins-testkit": "^4.3.0",
    "@salesforce/dev-config": "^4.0.1",
    "@salesforce/dev-scripts": "^5.7.0",
    "@salesforce/prettier-config": "^0.0.3",
    "@salesforce/ts-sinon": "^1.4.14",
    "@swc/core": "^1.3.19",
    "@types/chai": "^4.3.6",
    "@types/chromedriver": "^81.0.1",
    "@types/json-query": "^2.2.3",
    "@types/line-reader": "^0.0.33",
    "@types/lodash": "^4.14.199",
    "@types/mocha": "^5",
    "@types/node": "^16",
    "@types/prompts": "^2.0.14",
    "@types/proxyquire": "^1.3.29",
    "@types/selenium-webdriver": "^4.1.5",
    "@types/sqlstring": "^2.3.0",
    "@types/tmp": "^0.2.1",
    "@types/xml2js": "^0.4.9",
    "@typescript-eslint/eslint-plugin": "^5.36.1",
    "@typescript-eslint/eslint-plugin-tslint": "^5.16.0",
    "@typescript-eslint/parser": "^5.36.1",
    "chai": "^4.3.6",
    "eslint": "^8.50.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-config-salesforce": "^2.0.2",
    "eslint-config-salesforce-license": "^0.1.6",
    "eslint-config-salesforce-typescript": "^1.1.2",
    "eslint-plugin-header": "^3.0.0",
    "eslint-plugin-import": "2.28.1",
    "eslint-plugin-jsdoc": "^46.4.6",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-sf-plugin": "^1.16.2",
    "globby": "^13.1.4",
    "husky": "^7.0.4",
    "mocha": "^9.2.2",
    "nyc": "^15.1.0",
    "oclif": "^3.17.2",
    "prettier": "^2.8.8",
    "pretty-quick": "^3.1.3",
    "proxyquire": "^2.1.3",
    "shx": "0.3.4",
    "sinon": "10.0.0",
    "ts-node": "^10.9.1",
    "typescript": "^5.1.6",
    "wireit": "^0.14.0"
  },
  "resolutions": {
    "@types/ws": "8.5.4"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "files": [
    "/lib",
    "/messages",
    "/oclif.manifest.json"
  ],
  "homepage": "https://github.com/ImperiumMaximus/sfdx-metadata-patcher",
  "keywords": [
    "sfdx-plugin"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "oclif": {
    "commands": "./lib/commands",
    "bin": "sf",
    "topicSeparator": " ",
    "topics": {
      "mdata": {
        "description": "Commands to manipulate Salesforce Metadata."
      }
    },
    "devPlugins": [
      "@oclif/plugin-help"
    ]
  },
  "repository": "ImperiumMaximus/sfdx-metadata-patcher",
  "scripts": {
    "build": "wireit",
    "clean": "sf-clean",
    "clean-all": "sf-clean all",
    "clean:lib": "shx rm -rf lib && shx rm -rf coverage && shx rm -rf .nyc_output && shx rm -f oclif.manifest.json",
    "compile": "wireit",
    "docs": "sf-docs",
    "format": "wireit",
    "lint": "wireit",
    "postinstall": "node -e \"if (process.env.NODE_ENV !== 'production'){process.exit(1)} \" || yarn husky install",
    "postpack": "shx rm -f oclif.manifest.json",
    "prepack": "sf-prepack",
    "test": "wireit",
    "test:nuts": "nyc mocha \"**/*.nut.ts\" --slow 4500 --timeout 600000 --parallel",
    "test:only": "wireit",
    "version": "oclif readme",
    "coverage": "nyc report --reporter text-lcov --extension .ts > coverage.lcov"
  },
  "wireit": {
    "build": {
      "dependencies": [
        "compile",
        "lint"
      ]
    },
    "compile": {
      "command": "tsc -p . --pretty --incremental",
      "files": [
        "src/**/*.ts",
        "**/tsconfig.json",
        "messages/**"
      ],
      "output": [
        "lib/**",
        "*.tsbuildinfo"
      ],
      "clean": "if-file-deleted"
    },
    "format": {
      "command": "prettier --write \"+(src|test|schemas)/**/*.+(ts|js|json)|command-snapshot.json\"",
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        "schemas/**/*.json",
        "command-snapshot.json",
        ".prettier*"
      ],
      "output": []
    },
    "lint": {
      "command": "eslint src/**/*.ts test/**/*.ts --color --cache --cache-location .eslintcache",
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        "messages/**",
        "**/.eslint*",
        "**/tsconfig.json"
      ],
      "output": []
    },
    "test:compile": {
      "command": "tsc -p \"./test\" --pretty",
      "files": [
        "test/**/*.ts",
        "**/tsconfig.json"
      ],
      "output": []
    },
    "test": {
      "dependencies": [
        "test:compile",
        "test:only",
        "lint"
      ]
    },
    "test:only": {
      "command": "nyc mocha \"test/**/*.test.ts\"",
      "env": {
        "FORCE_COLOR": "2"
      },
      "files": [
        "test/**/*.ts",
        "src/**/*.ts",
        "**/tsconfig.json",
        ".mocha*",
        "!*.nut.ts",
        ".nycrc"
      ],
      "output": []
    },
    "test:command-reference": {
      "command": "\"./bin/dev\" commandreference:generate --erroronwarnings",
      "files": [
        "src/**/*.ts",
        "messages/**",
        "package.json"
      ],
      "output": [
        "tmp/root"
      ]
    },
    "test:deprecation-policy": {
      "command": "\"./bin/dev\" snapshot:compare",
      "files": [
        "src/**/*.ts"
      ],
      "output": [],
      "dependencies": [
        "compile"
      ]
    },
    "test:json-schema": {
      "command": "\"./bin/dev\" schema:compare",
      "files": [
        "src/**/*.ts",
        "schemas"
      ],
      "output": []
    }
  }
}
